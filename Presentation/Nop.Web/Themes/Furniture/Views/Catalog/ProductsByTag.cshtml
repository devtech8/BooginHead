@model ProductsByTagModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(string.Format(T("PageTitle.ProductsByTag").Text, Model.TagName));
}
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
<div class="page product-tag-page">
    <div class="page-title">
        <h1>@String.Format(T("Products.Tags.ProductsTaggedWith").Text, Model.TagName)</h1>
    </div>
    <div class="page-body">
        @Html.Widget("productsbytag_top")
        <div class="product-selectors">
        @*sorting*@
            @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
            {
                <div class="product-sorting">
                    <span>@T("Categories.OrderBy")</span>
                    @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
                </div>
            }
            @*page size*@
            @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
            {
                <div class="product-page-size">
                    <span>@T("Categories.PageSize")</span> 
                    @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { onchange = "setLocation(this.value);" })
                    <span>@T("Categories.PageSize.PerPage")</span>
                </div>
            }
            @*view mode*@
            @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
            {
                <div class="product-viewmode">
                    <span>@T("Categories.ViewMode")</span>
                    @{
                        var gridView = Model.PagingFilteringContext.AvailableViewModes.SingleOrDefault(mode => mode.Text.Equals(T("Categories.ViewMode.Grid").Text));
                        if (gridView != null)
                        {
                            var selectedClass = "";
                            if (gridView.Selected)
                            {
                                selectedClass = "selected";
                            }
                            <a class="grid-view @selectedClass" href="@gridView.Value" title="@T("Furniture.GridView")"></a>
                        }

                        var listView = Model.PagingFilteringContext.AvailableViewModes.SingleOrDefault(mode => mode.Text.Equals(T("Categories.ViewMode.List").Text));
                        if (listView != null)
                        {
                            var selectedClass = "";
                            if (listView.Selected)
                            {
                                selectedClass = "selected";
                            }
                            <a class="list-view @selectedClass" href="@listView.Value" title="@T("Furniture.ListView")"></a>
                        }
                    }
                </div>
            }
        </div>
        </div>
        @Html.Widget("productsbytag_before_product_list")
        @*product list*@
        @if (Model.Products.Count > 0)
        {
            if (Model.PagingFilteringContext.ViewMode == "list")
            {
            @*list mode*@
            <div class="product-list">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @Html.Partial("_ProductBox", product)
                    </div>
                }
            </div>     
            }
            else
            {
            @*grid mode*@
            <div class="product-grid">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @Html.Partial("_ProductBox", product)
                    </div>
                }
            </div>
            }
        }
        <div class="pager">
            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
        </div>
        @Html.Widget("productsbytag_bottom")
    </div>
</div>
